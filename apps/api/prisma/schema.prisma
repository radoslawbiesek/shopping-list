// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int          @id @default(autoincrement())
  email               String       @unique
  name                String       @unique
  password            String
  createdAt           DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime     @updatedAt() @db.Timestamptz(6)
  Category            Category[]
  Product             Product[]
  List                List[]
  ListItem            ListItem[]
  ListAccessUser      ListAccess[] @relation("ListAccessUser")
  ListAccessCreatedBy ListAccess[] @relation("ListAccessCreatedBy")
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  parentId  Int?
  parent    Category?  @relation("Subcategory", fields: [parentId], references: [id])
  children  Category[] @relation("Subcategory")
  createdBy Int
  user      User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime   @updatedAt() @db.Timestamptz(6)
  Product   Product[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  image       String?
  categoryId  Int
  category    Category   @relation(fields: [categoryId], references: [id])
  createdBy   Int
  user        User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  lastUsed    DateTime?  @db.Timestamptz(6)
  createdAt   DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime   @updatedAt() @db.Timestamptz(6)
  ListItem    ListItem[]
}

model List {
  id         Int          @id @default(autoincrement())
  name       String
  createdBy  Int
  user       User         @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime     @updatedAt() @db.Timestamptz(6)
  ListItem   ListItem[]
  ListAccess ListAccess[]
}

model ListItem {
  id         Int      @id @default(autoincrement())
  listId     Int
  list       List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  amount     Int
  isChecked  Boolean
  isPriority Boolean
  createdBy  Int
  user       User     @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt() @db.Timestamptz(6)
}

enum Access {
  OWNER
  READ_WRITE
}

model ListAccess {
  id            Int      @id @default(autoincrement())
  listId        Int
  list          List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  userId        Int
  user          User     @relation("ListAccessUser", fields: [userId], references: [id], onDelete: Cascade)
  access        Access
  createdBy     Int
  createdByUser User     @relation("ListAccessCreatedBy", fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt() @db.Timestamptz(6)
}
